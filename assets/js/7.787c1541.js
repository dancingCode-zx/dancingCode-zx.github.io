(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,e,n){"use strict";n.r(e);var a=n(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"知识点归纳以及碰到的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#知识点归纳以及碰到的问题"}},[t._v("#")]),t._v(" 知识点归纳以及碰到的问题")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("早就有写一个个人博客的想法了，因为平时遇到的问题或者知识点都随手记在本子上或者发在个人的QQ群，而这些消息要不就不方便随时查看，要不就一下把缓存清空了，伤脑经。这下好了，弄一个博客，还能添加到手机屏幕，妈妈再也不用担心我把东西搞丢了(以下东西纯属平时个人整理)")]),t._v(" "),n("h2",{attrs:{id:"html、css相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html、css相关"}},[t._v("#")]),t._v(" HTML、CSS相关")]),t._v(" "),n("h3",{attrs:{id:"_1-三大事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-三大事件"}},[t._v("#")]),t._v(" 1. 三大事件")]),t._v(" "),n("ol",[n("li",[t._v("鼠标事件: click mouseup mouseenter")]),t._v(" "),n("li",[t._v("键盘事件: keyup keydown keypress")]),t._v(" "),n("li",[t._v("html事件: focus select load change")])]),t._v(" "),n("h3",{attrs:{id:"_2-冒泡、捕获、默认行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-冒泡、捕获、默认行为"}},[t._v("#")]),t._v(" 2. 冒泡、捕获、默认行为")]),t._v(" "),n("ol",[n("li",[t._v("冒泡：父子元素都有click事件，当点击子元素的click事件时，父元素的click事件也会触发\n"),n("ul",[n("li",[t._v("阻止冒泡: event.stoppropation() event.cancelbubble()(IE)")])])]),t._v(" "),n("li",[t._v("捕获：与冒泡相反")]),t._v(" "),n("li",[t._v("默认行为: 像form表单的提交等\n"),n("ul",[n("li",[t._v("阻止默认行为: event.preventDefault() return false")])])])]),t._v(" "),n("h3",{attrs:{id:"_3-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-元素"}},[t._v("#")]),t._v(" 3. 元素")]),t._v(" "),n("ol",[n("li",[t._v("行内元素: a b span img input select strong")]),t._v(" "),n("li",[t._v("块元素: div ul ol li dt p")]),t._v(" "),n("li",[t._v("空元素: br hr meta\n"),n("ul",[n("li",[t._v("行内元素不可以设置宽高，不独占一行。但是可以套用块级元素占一行，如span里面套div")]),t._v(" "),n("li",[t._v("块元素可以设置宽高，独占一行")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-css-sprite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-css-sprite"}},[t._v("#")]),t._v(" 4. CSS sprite")]),t._v(" "),n("ol",[n("li",[t._v("将多个小图片拼在一个图中，通过background-position获取")]),t._v(" "),n("li",[t._v("优点: 减少http请求，提高页面加载速度，减少图片大小，减少内存")]),t._v(" "),n("li",[t._v("缺点: 图片合并麻烦，维护麻烦，修改一个图片就要重新布局")])]),t._v(" "),n("h3",{attrs:{id:"_5-doctype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-doctype"}},[t._v("#")]),t._v(" 5. DOCTYPE")]),t._v(" "),n("p",[t._v("因为HTML5不在是SGML的子集，所以不在需要DTD的引入，所以开头只要写DOCTYPE，他的作用是告诉浏览器用什么文档类型的规范来解析该文档")]),t._v(" "),n("h3",{attrs:{id:"_6-src、href、-import问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-src、href、-import问题"}},[t._v("#")]),t._v(" 6. src、href、@import问题")]),t._v(" "),n("ol",[n("li",[t._v("src 会暂停其他资源的加载,直到把src引用的资源加载、编译、执行完(流氓),这就是为什么script标签放页面底部")]),t._v(" "),n("li",[t._v("@import 和src这个流氓一样")]),t._v(" "),n("li",[t._v("href 这个就很好了，加载他引入的同时，还能加载其他的资源，这也是为什么建议用herf而不用@import\n"),n("ul",[n("li",[t._v("重申web标准及wcc标准")]),t._v(" "),n("li",[t._v("标签闭合 标签小写 外链css/js 结构行为为表现的分离")]),t._v(" "),n("li",[t._v("(插一个知识点)前端页面三大层次 结构层(html) 表现层(css) 行为层(js)")])])])]),t._v(" "),n("h3",{attrs:{id:"_7-浮动与清除浮动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-浮动与清除浮动"}},[t._v("#")]),t._v(" 7. 浮动与清除浮动")]),t._v(" "),n("ol",[n("li",[t._v("浮动:浮动的框可以向左向右移动，直到触碰到外部包含的边框或另一个浮动的边框")]),t._v(" "),n("li",[t._v("清除浮动:脱离普通的文档流\n"),n("ul",[n("li",[t._v("clear:both 在最后一个标签再加一个标签，加上这个属性")]),t._v(" "),n("li",[t._v("overflow:hidden 父级添加这个属性，触发BFC模式(块格式化上下文)，缺点：容易导致内容被隐藏")]),t._v(" "),n("li",[t._v("after伪元素(.clearfix是父级的)")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('  .clearfix:after {\n    content:"";\n    display:block;\n    clear:both;\n    visibility:hidden;\n  }\n  .clearfix {\n    *zoom:1; 兼容IE\n  }\n')])])]),n("ul",[n("li",[t._v("before、after双伪元素清除"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('  .clearfix:before, .clearfix:after {\n    content:"";\n    display:table;\n  }\n  .clearfix:after {\n    clear:both;\n  }\n  .clearfix {\n    *zoom:1;\n  }\n')])])])])]),t._v(" "),n("h3",{attrs:{id:"_8-img的title和alt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-img的title和alt"}},[t._v("#")]),t._v(" 8. img的title和alt")]),t._v(" "),n("ol",[n("li",[t._v("alt: 图片无法加载显示的文字")]),t._v(" "),n("li",[t._v("title: 图片正常加载，移动到图片上显示的文字")])]),t._v(" "),n("h3",{attrs:{id:"_9-http请求与用途"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-http请求与用途"}},[t._v("#")]),t._v(" 9. HTTP请求与用途")]),t._v(" "),n("ol",[n("li",[t._v("get: 发送请求来获得服务器的资源")]),t._v(" "),n("li",[t._v("post: 提交数据，指定资源在服务器位置，相比于    get,携带的体积大")]),t._v(" "),n("li",[t._v("put: 提交资源，不能指定位置")]),t._v(" "),n("li",[t._v("delect: 删除服务器资源")])]),t._v(" "),n("h3",{attrs:{id:"_10-对网站就行优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-对网站就行优化"}},[t._v("#")]),t._v(" 10. 对网站就行优化")]),t._v(" "),n("ol",[n("li",[t._v("content: 减少http请求，合并文件，精灵图，减少dom数量")]),t._v(" "),n("li",[t._v("server: 对组件进行Gzip压缩")]),t._v(" "),n("li",[t._v("cookie: 减少cookie大小")]),t._v(" "),n("li",[t._v("css： 将样式放页面顶部，用link并不用@import")]),t._v(" "),n("li",[t._v("js: 脚本放底部，压缩js，减少DOM")]),t._v(" "),n("li",[t._v("图片: base64,精灵图")])]),t._v(" "),n("h3",{attrs:{id:"_11-http状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-http状态码"}},[t._v("#")]),t._v(" 11. http状态码")]),t._v(" "),n("ol",[n("li",[t._v("1xx: 信息状态码")]),t._v(" "),n("li",[t._v("2xx: 成功状态码\n"),n("ul",[n("li",[t._v("200 ok,正确返回信息")]),t._v(" "),n("li",[t._v("201 请求成功，并且服务器创建了新的资源")]),t._v(" "),n("li",[t._v("202 服务器接收请求，但没有处理")])])]),t._v(" "),n("li",[t._v("3xx 重定向\n"),n("ul",[n("li",[t._v("301 永久重定向")]),t._v(" "),n("li",[t._v("302 临时重定向")]),t._v(" "),n("li",[t._v("303 临时重定向，且总是用get请求")])])]),t._v(" "),n("li",[t._v("4xx 服务器错误\n"),n("ul",[n("li",[t._v("400 服务器无法理解请求的格式")]),t._v(" "),n("li",[t._v("401 请求未授权")]),t._v(" "),n("li",[t._v("403 禁止访问")]),t._v(" "),n("li",[t._v("404 找不到资源")])])]),t._v(" "),n("li",[t._v("5xx\n"),n("ul",[n("li",[t._v("500 服务器端错误")]),t._v(" "),n("li",[t._v("503 服务器维护中")])])])]),t._v(" "),n("h3",{attrs:{id:"_12-浏览器内核"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-浏览器内核"}},[t._v("#")]),t._v(" 12. 浏览器内核")]),t._v(" "),n("ol",[n("li",[t._v("渲染引擎: 取得网页(html)内容，加入css")]),t._v(" "),n("li",[t._v("js引擎: 解析和执行JS来实现网页动态效果")])]),t._v(" "),n("h3",{attrs:{id:"_13-html5增加了哪些，删除了哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-html5增加了哪些，删除了哪些"}},[t._v("#")]),t._v(" 13. html5增加了哪些，删除了哪些")]),t._v(" "),n("ol",[n("li",[t._v("绘画canvas")]),t._v(" "),n("li",[t._v("媒体audio、vedio")]),t._v(" "),n("li",[t._v("存储localstorage、sessionstorage")]),t._v(" "),n("li",[t._v("语义化标签head nav footer article section")]),t._v(" "),n("li",[t._v("表单控件calendae data email number")]),t._v(" "),n("li",[t._v("新技术websocket webworker")]),t._v(" "),n("li",[t._v("移除:font big center frame")])]),t._v(" "),n("h3",{attrs:{id:"_14-html的全局属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-html的全局属性"}},[t._v("#")]),t._v(" 14. html的全局属性")]),t._v(" "),n("ol",[n("li",[t._v("class 设置类")]),t._v(" "),n("li",[t._v("id 文档内唯一")]),t._v(" "),n("li",[t._v("style 行内css样式")]),t._v(" "),n("li",[t._v("title 元素相关的信息")]),t._v(" "),n("li",[t._v("data 自定义属性")])]),t._v(" "),n("h3",{attrs:{id:"_15-canvas与svg区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15-canvas与svg区别"}},[t._v("#")]),t._v(" 15. canvas与svg区别")]),t._v(" "),n("ol",[n("li",[t._v("svg: 绘制的每一个图形都是独立的dom节点,可以绑定事件")]),t._v(" "),n("li",[t._v("canvas: 输出的是一块画布")]),t._v(" "),n("li",[t._v("不同: canvas是画布，放大会失帧，锯齿。svg是矢量图形,可以修改参数来缩放，不失帧")])]),t._v(" "),n("h3",{attrs:{id:"_16-div-css布局较table好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-div-css布局较table好处"}},[t._v("#")]),t._v(" 16. div+css布局较table好处")]),t._v(" "),n("ol",[n("li",[t._v("修改方便，只要改css文件")]),t._v(" "),n("li",[t._v("页面加载速度块，结构清晰")]),t._v(" "),n("li",[t._v("结构、表现分离")]),t._v(" "),n("li",[t._v("易优化、seo")])]),t._v(" "),n("h3",{attrs:{id:"_17-渐进增强和优雅降级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_17-渐进增强和优雅降级"}},[t._v("#")]),t._v(" 17. 渐进增强和优雅降级")]),t._v(" "),n("ol",[n("li",[t._v("渐进增强: 针对低版本浏览器构建页面，保证最基本的功能，然后对高版本浏览器进行效果、交互等功能的添加")]),t._v(" "),n("li",[t._v("优雅降级: 一开始就构建完整功能，然后针对低版本浏览器进行兼容")]),t._v(" "),n("li",[t._v("区别: 优雅降级是从复杂开始，减少用户体验。而渐进增强是从基础开始扩充，增加用户体验。")])]),t._v(" "),n("h3",{attrs:{id:"_18-网页制作用到的图片格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_18-网页制作用到的图片格式"}},[t._v("#")]),t._v(" 18. 网页制作用到的图片格式")]),t._v(" "),n("p",[t._v("jpg png jpeg svg webp(体检小，质量高，iphone不能用) Apng")]),t._v(" "),n("h3",{attrs:{id:"_19-display-none和visibility-hidden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_19-display-none和visibility-hidden"}},[t._v("#")]),t._v(" 19. display:none和visibility:hidden")]),t._v(" "),n("ol",[n("li",[t._v("display:none: 删除这个dom 和v-if一样")]),t._v(" "),n("li",[t._v("visibility:hidden: 修改css样式，使其不可见，继承属性，子元素要可见要修改样式(v-show)")])]),t._v(" "),n("h3",{attrs:{id:"_20-为什么要初始化css样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_20-为什么要初始化css样式"}},[t._v("#")]),t._v(" 20. 为什么要初始化css样式")]),t._v(" "),n("p",[t._v("不同的浏览器对一些标签的默认值不同，为了让页面在任何一个浏览器显示的效果一样，就要初始化样式")]),t._v(" "),n("h3",{attrs:{id:"_21-css3新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_21-css3新特性"}},[t._v("#")]),t._v(" 21. css3新特性")]),t._v(" "),n("ol",[n("li",[t._v("新增各种选择器")]),t._v(" "),n("li",[t._v("圆角 border-radius")]),t._v(" "),n("li",[t._v("渐变")]),t._v(" "),n("li",[t._v("阴影text-shadow box-shadow")]),t._v(" "),n("li",[t._v("动画animation:@keyframes")]),t._v(" "),n("li",[t._v("过渡transition 属性 时间 函数(匀速，快慢快) 延迟")]),t._v(" "),n("li",[t._v("transform rotate(旋转) scale(缩放) translate(移动) 3d父级要加透明属性perspective")])]),t._v(" "),n("h3",{attrs:{id:"_22-display"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_22-display"}},[t._v("#")]),t._v(" 22. display")]),t._v(" "),n("ol",[n("li",[t._v("block: 变成块级元素")]),t._v(" "),n("li",[t._v("inline: 变行内元素")]),t._v(" "),n("li",[t._v("none: 不可见")]),t._v(" "),n("li",[t._v("table: 像表格一样显示")]),t._v(" "),n("li",[t._v("inline-block: 行内块级")]),t._v(" "),n("li",[t._v("inherit: 从父级继承display值")])]),t._v(" "),n("h3",{attrs:{id:"_23-position"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_23-position"}},[t._v("#")]),t._v(" 23. position")]),t._v(" "),n("ol",[n("li",[t._v("absolute: 绝对，相对于外面第一个父元素")]),t._v(" "),n("li",[t._v("fixed: 绝对，相对于浏览器窗口")]),t._v(" "),n("li",[t._v("relative: 相对，相对于本身")]),t._v(" "),n("li",[t._v("inherie: 从父元素继承")])]),t._v(" "),n("h3",{attrs:{id:"_24-水平居中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_24-水平居中"}},[t._v("#")]),t._v(" 24. 水平居中")]),t._v(" "),n("ol",[n("li",[t._v("行内元素: 设置text-align：center")]),t._v(" "),n("li",[t._v("宽度固定: 左右margin:auto")]),t._v(" "),n("li",[t._v("绝对定位： 上下左右0 margin：auto")]),t._v(" "),n("li",[t._v("flex布局: justify-content:center")])]),t._v(" "),n("h3",{attrs:{id:"_25-垂直居中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_25-垂直居中"}},[t._v("#")]),t._v(" 25. 垂直居中")]),t._v(" "),n("ol",[n("li",[t._v("绝对定位: 上下0 margin:auto")]),t._v(" "),n("li",[t._v("flex布: align-items:center")]),t._v(" "),n("li",[t._v("文本: line-height:height")])]),t._v(" "),n("h4",{attrs:{id:"垂直水平居中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垂直水平居中"}},[t._v("#")]),t._v(" 垂直水平居中")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<style>\n  html,body{\n    height:100%;\n  }\n  #box{\n    box-sizing: border-box;\n    height: 50px;\n    width: 100px;\n  }\n</style>\n\n<body>\n  <div id="box"></div>\n</body>\n')])])]),n("ul",[n("li",[t._v("定位方法")])]),t._v(" "),n("ol",[n("li",[t._v("让他在屏幕中间，然后左移一半，上移一半，这必须要知道宽高")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```\nbody{\n  position:relative;\n}\n#box{\n  position:absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -25px;\n  margin-left: -50px;\n}\n```\n\n2. 这个是必须要有宽高\n```\nbody{\n  position:relative;\n}\n#box{\n  position:absolute;\n  top: 0;\n  left: 0;\n  right:0;\n  bottom:0;\n  margin:auto;\n}\n```\n\n3. css3\n```\nbody{\n  position:relative;\n}\n#box{\n  position:absolute;\n  top: 50%;\n  left: 50%;\n  transform:transition(-50%，-50%)\n}\n```\n\n- flex，让body里面的内容居中\n ```\n  body{\n    display:flex;\n    align-items: center;\n    justify-content: center;\n  }\n ```\n \n- JS 前提父元素 realtive\n```\n<script>\n  let win = document.documentElement\n  winH =win.clientHeight\n  winW = win.clientWidth\n\n\n  boxH=box.offsetHeight\n  boxW=box.offsetWidth\n\n  box.style.position=\"absolute\"\n  box.style.top=(winH-boxH)/2 + 'px'\n  box.style.left=(winW-boxW)/2 + 'PX'\n<\/script>\n```\n")])])]),n("h3",{attrs:{id:"_26-重绘和回流-重排"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_26-重绘和回流-重排"}},[t._v("#")]),t._v(" 26. 重绘和回流(重排)")]),t._v(" "),n("ol",[n("li",[t._v("重排: dom的变化影响到元素的几何属性，浏览器重新计算元素的几何属性，其他元素的几何属性也会受到影响，浏览器就要重新构造渲染树，这就叫重排。")]),t._v(" "),n("li",[t._v("重绘: 浏览器受到影响的部分重新绘制到屏幕上的过程")]),t._v(" "),n("li",[t._v("引起重排的原因\n"),n("ul",[n("li",[t._v("添加或删除可见的dom")]),t._v(" "),n("li",[t._v("元素位置内容尺寸改变")]),t._v(" "),n("li",[t._v("页面初始化")]),t._v(" "),n("li",[t._v("浏览器窗口尺寸改变")])])]),t._v(" "),n("li",[t._v("重排一定重绘，重绘不一定重排")])]),t._v(" "),n("h3",{attrs:{id:"_27-内核"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_27-内核"}},[t._v("#")]),t._v(" 27. 内核")]),t._v(" "),n("ol",[n("li",[t._v("火狐   -moz-")]),t._v(" "),n("li",[t._v("IE     -ms-")]),t._v(" "),n("li",[t._v("opera  -o-")]),t._v(" "),n("li",[t._v("chrome safar -webkit-")])]),t._v(" "),n("h3",{attrs:{id:"_28-一次url请求的过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_28-一次url请求的过程"}},[t._v("#")]),t._v(" 28. 一次url请求的过程")]),t._v(" "),n("ul",[n("li",[t._v("域名解析 --\x3e 发起TCP的3次握手 --\x3e 建立TCP连接后发起http请求 --\x3e 服务器响应http请求，浏览器得到html代码 --\x3e 浏览器解析html代码，并请求html代码中的资源（如js、css、图片等） --\x3e 浏览器对页面进行渲染呈现给用户")])]),t._v(" "),n("ol",[n("li",[t._v("域名解析   当我们访问www.baidu.com时，首先浏览器会先解析这个域名(主机)的IP地址\n先是浏览器看自身的dns缓存，看有没有对应的IP地址，有且没过期就进入2，没有就查找操作系统的dns缓存，看有没有，有且没过期也进入2，还没找到查找host文件夹，有没过期进入2，没有就请求运营商的dns缓存，让他给你。")]),t._v(" "),n("li",[t._v("TCP连接通过三次握手建立，释放通过四次挥手。  什是三次握手？当你去要一个女孩子微信的时候，你说：“美女，能加个微信吗？”，女孩子打量了你一眼，能接收你的长相的时候，就问“你有钱吗？你有车吗？你有房吗？”，然后你说说并拿出证据，那么恭喜你，勾搭成功了，然后过起了没羞没臊的生活。")]),t._v(" "),n("li",[t._v("发送http请求  如我们要打开www.baidu.com, 客户端就向服务端请求访问这个页面")]),t._v(" "),n("li",[t._v("服务端响应这个页面，客户端就能得到请求的资源，如www.baidu.com的html代码。就像女孩子觉得你长得还可以，还有钱时，就把微信给你了。")]),t._v(" "),n("li",[t._v("客户端解析请求到的资源，如解析html代码，并请求html代码里的资源如图片等。就像你知道了女孩子的微信，你知道他的三围吗？还得厚着脸皮继续问嘛？(有感觉自己是老司机)")]),t._v(" "),n("li",[t._v("当上面的工作做完后，浏览器就能把这个页面呈现在我们眼前了。")])]),t._v(" "),n("h3",{attrs:{id:"_29-http与tcp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-http与tcp"}},[t._v("#")]),t._v(" 29. http与tcp")]),t._v(" "),n("ol",[n("li",[t._v("TCP 运输层协议 传输数据")]),t._v(" "),n("li",[t._v("http 应用层协议 怎么传输数据")])]),t._v(" "),n("h3",{attrs:{id:"_30-跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_30-跨域"}},[t._v("#")]),t._v(" 30. 跨域")]),t._v(" "),n("ol",[n("li")]),t._v(" "),n("h2",{attrs:{id:"js-全是学完自己的归纳总结，可能有些错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-全是学完自己的归纳总结，可能有些错误"}},[t._v("#")]),t._v(" JS(全是学完自己的归纳总结，可能有些错误)")]),t._v(" "),n("h3",{attrs:{id:"_1-数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型"}},[t._v("#")]),t._v(" 1. 数据类型")]),t._v(" "),n("ol",[n("li",[t._v("基本数据类型: string  number  boolean  null  undefined")]),t._v(" "),n("li",[t._v("引用数据类型: object  function  Array")]),t._v(" "),n("li",[t._v("function: 特殊的对象，存储可执行的代码")]),t._v(" "),n("li",[t._v("Array: 特殊的对象，里面的数据有序，可以通过下标查找")]),t._v(" "),n("li",[t._v("数据类型判断方法\n"),n("ul",[n("li",[t._v("type of: 返回数据类型的字符串表达，即")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  var a\n  console(a)  // undefined\n  type of(a)  //'undefined'\n")])])]),t._v("可以判断String undefined boolean number\n"),n("ul",[n("li",[t._v("==/=== 前者会先转换类型在判断是否相等，后者直接判断"),n("br"),t._v("\nnull通过===判断"),n("br"),t._v("\n意思就是基本数据类型除null用===判断之外，其余都可以用 type of判断")]),t._v(" "),n("li",[t._v("instance of: A instance of B  B的显示原型是否在A的原型链上，在返回ture"),n("br"),t._v("\n引用数据类型都可以通过他判断")])])])]),t._v(" "),n("h3",{attrs:{id:"_2-原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-原型链"}},[t._v("#")]),t._v(" 2. 原型链")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("function person(){}")]),n("br"),t._v(" "),n("code",[t._v("var a = new person()")]),t._v(" "),n("ul",[n("li",[t._v("构造函数有一个prototype属性")]),t._v(" "),n("li",[t._v("实例对象有一个__proto__属性(尼玛，咋画图，不画图谁搞得清！！！)")]),t._v(" "),n("li",[t._v("每个原型都有一个 constructor 属性指向关联的构造函数 实例原型指向构造函数 person.prototype.constructor=person")]),t._v(" "),n("li",[t._v("构造函数的prototype指向一个空的object对象(这个空object对象也有一个__proto__属性，指向顶级object对象，祖宗，上面没人了，在__proto__ = null)")]),t._v(" "),n("li",[t._v("实列的__proto__也指向这个空的object对象(这个空object对象也有一个__proto__属性，指向顶级object对象，祖宗，上面没人了，在__proto__ = null)"),n("br"),t._v("\n意思就是 "),n("code",[t._v("person.prototype = a.__ proto __")]),n("br"),t._v("\n当我们"),n("code",[t._v("var a = new person()")]),t._v("时发生了什么呢?")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  var a = {}   \n  a.__proto__ = person.prototype  //person.call(a)\n")])])]),t._v("一目了然，先定义一个空对象，然后让创建的a的__proto__ 指向 person 的prototype"),n("br"),t._v("\n当我们给person的prototype赋值会怎么样呢？"),n("br"),t._v(" "),n("code",[t._v("person.prototype.number = 12")]),n("br"),t._v("\n显然 "),n("code",[t._v("a.__proto__.num = 12")]),t._v(" //不是复制，是指向同一个对象，读值\n而上文提到他们指向的空object对象的__proto__指向顶级object对象，就是那个祖宗。讲道理，祖宗就一个哈，事实祖宗就是一个，那么就是"),n("br"),t._v(" "),n("code",[t._v("person.prototype.__proto__.age = 108")]),n("br"),t._v("\n那么，可以得出一个结论  "),n("code",[t._v("a.__proto__.__proto__.age = 108")]),t._v("  //读取这个age"),n("br"),t._v("\n问题来了，程序员不就是为了偷懒嘛！！！不然干嘛封装一个个对象、方法(其实，这个是我现在还没搞懂)"),n("br"),t._v("\n那些烦人的__proto__就给省略了，什么意思呢？下面进入有奖竞猜环节，中奖自理"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  var a = new b()\n  b.prototype.num = 12\n  b.prototype.__proto__.age = 108\n")])])]),t._v("那么问题来了"),n("code",[t._v("a.num = ? a.age = ?")]),t._v("\n给点提示偷懒。。。。。。\n下面公布答案，拿小本本画画吧"),n("br"),t._v("\n—————————————————————————————————————\n—————————————————————————————————————"),n("br"),t._v("\n————————————煞费苦心的分割线——————————\n—————————————————————————————————————"),n("br"),t._v("\n—————————————————————————————————————"),n("br"),t._v("\n根据偷懒算法，显然"),n("code",[t._v("a.num = 12 a.age = 108")]),t._v("\n终极大招，Function也是一个函数，他也是new Function产生的"),n("br"),t._v("\nObject也是一个函数,也是 new Function产生的，即"),n("br"),t._v(" "),n("code",[t._v("Function = new Function() Object = new Function()")]),n("br"),t._v("\n此外，有句话叫做万物皆对象"),n("br"),t._v(" "),n("code",[t._v("Function = new Object() Object = new Object()")]),t._v("\n根据这几句代码，可以得出"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Function.__proto__ = Function.prototype   \nObject.__proto__ = Function.prototype   \n\nFunction.__proto__ = Object.prototype   \nObject.__proto__ = Object.prototype   \n")])])])])]),t._v(" "),n("h3",{attrs:{id:"_3-变量提升、执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量提升、执行上下文"}},[t._v("#")]),t._v(" 3. 变量提升、执行上下文")]),t._v(" "),n("ol",[n("li",[t._v("当一个页面被加载时会发生什么呢？")])]),t._v(" "),n("ul",[n("li",[t._v("首先--\x3e页面被加载--\x3e创建windows全局对象--\x3e生成全局作用域--\x3e生成执行上下文--\x3e变量提升--\x3e生成全局变量对象\n"),n("ul",[n("li",[t._v("在执行全局代码之前，先将windows确定为全局执行上下文")]),t._v(" "),n("li",[t._v("var 定义的全局变量和函数，添加到windows上为windows的属性，并赋值为null"),n("br"),t._v("\n即 ```\nconsole.log(a)"),n("br"),t._v("\nvar a=3\n得到的结论是 undefined，即  console.log(a) ==> undefined"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("这其中涉及到什么呢   \n根据上文所说，先将windows确定为执行上下文   \n然后 var  定义的变量，赋值为undefined, 且在windows上   \n可以这样理解   \n")])])]),t._v("var a;\nconsole.log(a);\na=3;"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("看到上面的代码可以知道 定义了a，但是喂赋值，所以为undefined   \n所以```\nconsole.log(fn)\nvar fn = function(){\n  console.log('a')\n}\n")])])]),t._v("这里"),n("code",[t._v("console.log(fn)")]),t._v("是什么呢？"),n("br"),t._v("\n根据上面所说，是 undefined"),n("br"),t._v("\n那么函数声明呢？函数声明和函数定义有什么区别？"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("console.log(gn)   \nfunction gn(){\n  console.log('b')\n}\nconsole.log(gn)==>function gn(){\n  console.log('b')\n}\n")])])]),t._v("windows会把函数声明的所有数据添加到他的属性里"),n("br"),t._v("\n所以可以通过windows获取"),n("br"),t._v("\nconsole.log(windows.a) = 3"),n("br"),t._v("\n并且函数提升是优先于变量提升的"),n("br"),t._v("\n看下面这段代码"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  console.log(a)  //f a(){console.log('11111)}  这里不是undefined的原因就是函数提升优先于变量提升\n  console.log(a()) // undefined\n  var a = 3\n  function a(){\n    console.log('11111')\n  }\n  console.log(a)  //3\n  a=6\n  console.log(a()) //a is not a function  这里被覆盖了，上一句代码赋值了\n")])])]),t._v("原理"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  var a = function(){\n    console.log('11111')\n  }\n  var a\n  console.log(a)\n  console.log(a())\n\n  a=3\n  console.log(a) //3\n  a=6\n  console.log(a()) // a is not a function\n")])])]),t._v("函数提升优先级比变量提升优先级高，不会被变量声明覆盖。但会被变量赋值覆盖")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-cookie-session-token"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookie-session-token"}},[t._v("#")]),t._v(" 4. Cookie Session token")]),t._v(" "),n("ul",[n("li",[t._v("由于Http是无状态信息的(当时的硬件与效率原因)，无法保存信息，而随着用户需求的增加，与服务器效率，用cokie session token来记录信息\n"),n("ul",[n("li",[t._v("cookie 明文 保存在客户端，不消耗服务器资源，不安全，是一个在硬盘的文件，有缓存作用，用来 存一些不敏感的消息")]),t._v(" "),n("li",[t._v("客户端发送信息(账号，密码),正确且用了session技术的话服务器会发送一个包含sesion id的cookie给客户端，客户端下次进入，向服务端发送这个cookie，如果服务端的session id 有这一个就成功了(cookie可以单独使用，sesson必须配合cookie使用)，最大的缺点就是服务器要记录session id，在现在，一些app的人数爆炸，如果存几万个，几十万个，就得返回500了")]),t._v(" "),n("li",[t._v("token 不存储  会把header头以及保存用户信息得俩部分通过某种算法变成一个签名（加密后得一种验证码），在加密变成一串字符串。验证时解析这个字符串，得到header以及保存得信息部分及签名，在比较俩签名是否相同，相同那么header与信息是正确的")])])])]),t._v(" "),n("h3",{attrs:{id:"_5-mvc-与-mvvm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-mvc-与-mvvm"}},[t._v("#")]),t._v(" 5. MVC 与 MVVM")]),t._v(" "),n("ol",[n("li",[t._v("MVC model + view + controller MVC的思想：一句话描述就是Controller负责将Model的数据用View显示出来\n"),n("ul",[n("li",[t._v("model 数据存放的地方，提供接口供controller使用")]),t._v(" "),n("li",[t._v("controller c处理应用程序中用户交互的部分 从视图层读取存在模型层，或者从模型层读取，渲染到视图层")]),t._v(" "),n("li",[t._v("view 能看到的，一般都是模型层的数据"),n("br"),t._v("\nview 与 model是单向的，不会直接交互，必须通过controller")])])]),t._v(" "),n("li",[t._v("MVVM 以前，由于页面功能的操作不是那么的频繁，所以mvc完全应付的过来。而随着功能逐渐的丰富，view或model频繁的更改，dom被频繁的操作，controller就有点力不从心了。为了解决这个问题，就出现了MVVM，MV还是熟悉的配方，管理者自己的事，而区别就是VM,他能沟通MV，通过数据绑定将model转化为view,通过事件监听将view转化为model,从而对数据进行双向数据绑定(vue的object.defineProperty的set\\get)")])]),t._v(" "),n("h3",{attrs:{id:"_6-浅拷贝-深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-浅拷贝-深拷贝"}},[t._v("#")]),t._v(" 6. 浅拷贝 深拷贝")]),t._v(" "),n("ol",[n("li",[t._v("浅拷贝 对原对象的引用，当你修改了某些值，原对象对应的值也会改变"),n("br"),t._v("\nvar obj = {\na:1;\narr:[2,3]\n}\nvar cloneobj = clone(obj)")])]),t._v(" "),n("p",[t._v("function clone(obj){\nlet newobj = {}\nfor(let item in obj){\nif(obj.hasOwnProperty(item))  // 如果obj有item这个属性\n{\nnewobj[item] = obj[item]\n}\n}\nreturn newobj\n}\nnewobj.arr[1]=100;\nconsole.log(obj.arr[1])  //100")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("这里遍历的只是最前排，若对象里面只是基本数据类型，那么这也算是深拷贝了，包括obj.spice() obj.contact   \n但如果里面包含引用数据类型，就行不通了\n\n2. 深拷贝 开辟一片新内存，将值拷贝过去\n  - Json.parse(Json.stringify())  最简单粗暴的一种方法\n  - 递归\n  ```\n    var obj = {\n     name:'周心',\n     age:22,\n     BirthPlace:['中国', '江西',  宜春']\n    }\n    let deepobj = deepClone(obj)\n    deepobj.BirthPlace[1]=\"湖南\"\n    deepobj.BirthPlace[2]=\"长沙\"\n    console.log(obj)  // ... 中国 江西 宜春\n    console.log(deepobj)  // ... 中国 湖南 长沙\n\n\n    function deepClone(obj){\n      var src = obj.constructor = Array?[]:{} // 判断obj属于啥子类型，并创建该空类型\n\n      for(let item in obj){\n        if(typeof obj[item]===\"object\"){\n          src[item]=deepClone(obj[item]);\n        }else{\n          src[item]=obj[item];\n       }\n      }\n      return src\n    }\n")])])]),n("h3",{attrs:{id:"_7-防抖-节流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-防抖-节流"}},[t._v("#")]),t._v(" 7. 防抖 节流")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("防抖 相比于坐电梯，按了10s后电梯启动，后面来一个人按了，得等十秒，又来一个人按，再得等10s"),n("br"),t._v("\n使用场景")]),t._v(" "),n("ul",[n("li",[t._v("搜索的时候，如果不设置防抖就会频繁的发送请求，增加服务器压力。"),n("br"),t._v("\n无论你怎么点，点完最后一次，隔2s打印success")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<button id='btn'/>\n\nfunction success()=>{\n  console.log('success')\n}\nconst debance = (fn,delay)=>{\n  let timer = null\n  return (...args)=>{\n    clearTimeout(timer)\n    timer = setTimeOut({\n      fn.apply(this,args)\n    },delay)\n  }\n}\nconst odebance = debance(success,2000)\nlet btn = document.getElementById('btn')\nbtn.addEventListener('click',odebance)\n")])])])]),t._v(" "),n("li",[n("p",[t._v("节流 在打王者的时候，你疯狂的用技能，疯狂的用技能，可是CD没到你摁的再快也没什么卵用，这就是节流的原理，在高频率的触发某件事的时候，只能在一定的时间段执行一次\n使用场景")]),t._v(" "),n("ul",[n("li",[t._v("滚动条滚动的时候，用户疯狂滚动，就会触发大量的函数，而用防抖完全是不明智的，这时候就要使用节流了。")]),t._v(" "),n("li",[t._v("游戏")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<button id='btn'/>\n\nfunction success()=>{\n  console.log('success')\n}\nconst throttle = (fn,delay)=>{\n  let flag = true\n  return (...args)=>{\n    if(!flag) return \n    flag = false\n    timer = setTimeOut({\n      fn.apply(this)\n      flag = true\n    },delay)\n  }\n}\nconst othrottle = throttle(success,2000)\nlet btn = document.getElementById('btn')\nbtn.addEventListener('click',othrottle)\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"_8-数组去重"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-数组去重"}},[t._v("#")]),t._v(" 8. 数组去重")]),t._v(" "),n("ul",[n("li",[t._v("indexof 寻找索引，如果有，返回第一次出现的索引，如果没有，返回-1")]),t._v(" "),n("li",[t._v("includes 是否包含 是返回true 否则返回false")])]),t._v(" "),n("ol",[n("li",[t._v("es6的filter 第一眼见到这个函数我就觉得秒呀，因为返回的是第一项的下标，就比如2，返回第一个2的下标1，然后第一个2的下标是2，说明重复了")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  let arr = [1, 2, 2, 3, 4, 5, 6, 4]\n  function getarr(arr){\n  let result = arr.filter((item,index) =>{\n    return arr.indexOf(item) == index\n  })\n   console.log(result) //1 2 3 4 5 6\n  }\n  getarr(arr)\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("es6的set，里面的元素必须独一无二，但是返回的不是数组,所以得转换一下")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  let arr = [1, 2, 2, 3, 4, 5, 6, 4]\n  function getarr(){\n   let result = Array.from(new Set(arr))\n   \x3c!-- let result = [...new Set(arr)] --\x3e\n   console.log(result) //1 2 3 4 5 6\n  }\n  getarr()\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("创建一个新数组，然后循环，把没有得push进去")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  let arr = [1, 2, 2, 3, 4, 5, 6, 4]\n  function getarr(){\n    let result = []\n    arr.forEach(item=>{\n     if(result.indexOf(item) == -1)\n     result.push(item)\n   })\n   console.log(result)\n  }\n  getarr()\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("es6的reduce reduce有俩参数 第一个是前面返回的结果")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let arr = [1, 2, 2, 3, 4, 5, 6, 4]\nfunction getarr(){\n    let result =arr.reduce((pre,item) =>{\n      return pre.includes(item)? pre:[...pre,item]\n    },[])\n      console.log(result)\n          \n  }\n  getarr()\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("排序")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let arr = [1, 2, 2, 3, 4, 5, 6, 4]\nfunction getarr(){\n  let result = []\n  let temp = arr.sort()\n  for(let i = 0; i<temp.length; i++){\n    if(temp[i]!=temp[i+1]){\n      result.push(temp[i])\n    }\n  }\n  console.log(result)\n}\ngetarr()\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);